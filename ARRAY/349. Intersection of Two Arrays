https://leetcode.com/problems/intersection-of-two-arrays/description/

Given two integer arrays nums1 and nums2, return an array of their intersection. Each element in the result must be unique and
you may return the result in any order.

Example 1:

Input: nums1 = [1,2,2,1], nums2 = [2,2]
Output: [2]



Example 2:

Input: nums1 = [4,9,5], nums2 = [9,4,9,8,4]
Output: [9,4]
Explanation: [4,9] is also accepted.


******** Using MAP ************

class Solution {
    public int[] intersection(int[] nums1, int[] nums2) {
     Map<Integer, Integer> map = new HashMap<>();
     for(int i = 0; i < nums1.length; i++)
     map.put(nums1[i], map.getOrDefault(nums1[i], 0)+ 1);

     Set<Integer> ans = new HashSet<>();
      for(int i = 0; i < nums2.length; i++)
      if(map.containsKey(nums2[i])) ans.add(nums2[i]);

      int[] result = new int[ans.size()];
        int index = 0;
        for (int num : ans) {
            result[index++] = num;
        }

        return result;
    }
}


******* only set ********

class Solution {
    public int[] intersection(int[] nums1, int[] nums2) {
     HashSet<Integer> set = new HashSet<Integer>();
        ArrayList<Integer> res = new ArrayList<Integer>();
        //Add all elements to set from array 1
        for(int i =0; i< nums1.length; i++) set.add(nums1[i]);
        for(int j = 0; j < nums2.length; j++) {
           // If present in array 2 then add to res and remove from set 
           if(set.contains(nums2[j])) {
                res.add(nums2[j]);
                set.remove(nums2[j]);
            }
        }
        // Convert ArrayList to array
        int[] arr = new int[res.size()];
        for (int i= 0; i < res.size(); i++) arr[i] = res.get(i);
        return arr;
    }
}
