https://leetcode.com/problems/longest-common-prefix/description/


class Solution {
    public String longestCommonPrefix(String[] strs) {
        // 1.sort the array
        Arrays.sort(strs);
         //after sort ["flight","flow","flower"]

        // 2. Take 2 string one is first string and 2nd one indicate last string
        String str1 = strs[0]; // indicate flight
        String str2 = strs[strs.length - 1]; // indicate flower
        
        //3.loop and check equal or not at the time not equal break
        int index = 0; 
        while(index < str1.length() && index < str2.length())
        {
            if(str1.charAt(index) == str2.charAt(index)) index ++;

            else
                break;
        }
        return str1.substring(0, index);
    }
}

*****************----------------------------------------------------------------*********************
______Online java compiler______

import java.util.Arrays;
import java.util.Scanner;

class HelloWorld {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();
        String[] str = new String[n];
        for (int i = 0; i < n; i++)
            str[i] = sc.next();
        // String[] sortedStr = longestCommonPrefix(str);
        System.out.println(longestCommonPrefix(str));
    }

    public static String longestCommonPrefix(String[] strs) {
        if (strs == null || strs.length == 0)
            return "";
        
        Arrays.sort(strs);
        String str1 = strs[0];
        String str2 = strs[strs.length - 1];
        StringBuilder sb = new StringBuilder();
        for(int i = 0; i < str1.length(); i++)
        {
            if(str1.charAt(i) == str2.charAt(i)) sb.append(str1.charAt(i));
         
            else break;
        }
        return sb.toString();
    }
}


Another Way_________

import java.util.Arrays;
import java.util.Scanner;

class HelloWorld {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        System.out.println("Enter size of array: ");
        int n = sc.nextInt();
        String[] str = new String[n];
        for (int i = 0; i < n; i++)
        {
            System.out.println("enter "+i+"th value: ");
            str[i] = sc.next();
        }    
        // String[] sortedStr = longestCommonPrefix(str);
        System.out.println("common is: "+longestCommonPrefix(str));
    }

    public static String longestCommonPrefix(String[] strs) {
       
        
        Arrays.sort(strs);
        String str1 = strs[0];
        String str2 = strs[strs.length - 1];
        int index = 0;
        while(index < str1.length() && index < str2.length())
        {
            if(str1.charAt(index) == str2.charAt(index)) index++;
            else break;
            
        }
        return str2.substring(0, index);
    }
}
